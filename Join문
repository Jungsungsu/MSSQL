-- 조인 : 두 개 이상의 테이블을 서로 묶어서 하나의 결과 집합으로 만들어 내는 것을 말한다.
-- 데이터베이스의 테이블은 데이터의 무결성을 위해서 여러 개의 테이블로 분리하여 저장한다.

-- INNER JOIN(내부 조인) : 가장 많이 사용되는 조인으로 대개의 업무에서 사용된다. 회원의 주소 정보를 알기 위해 주소 정보가 있는 회원 테이블과 결합하는 방법
-- 구매 테이블에 있는 유저 아이디와 유저테이블의 유저 아이디가 JYP인 아이디를 결합하기
USE sqlDB;
SELECT * 
	FROM buyTbl
		INNER JOIN userTbl
			ON buyTbl.userid = userTbl.userid
	WHERE buyTbl.userid = 'JYP';

-- 열의 항목이 너무 많아서 복잡하니 아이디/이름/구매물품/주소/연락처만 추출하기
SELECT buyTbl.userid, name, prodName, addr, mobile1 + mobile2 AS [연락처]
	FROM buyTbl
		INNER JOIN userTbl
			ON buyTbl.userid = userTbl.userid;

-- SELECT 다음의 컬럼 이름(열 이름)에도 모두 '테이블이름.열이름'식으로 붙여주기
SELECT buyTbl.userid, userTbl.name, buyTbl.prodName, userTbl.addr,
			userTbl.mobile1 + userTbl.mobile2 AS [연락처]
	FROM buyTbl
		INNER JOIN userTbl	
			ON buyTbl.userid = userTbl.userid;

-- 코드가 길어지면 복잡하기 때문에, 각 테이블에 별칭을 붙여 간편하게 할 수 있다.(Alias 사용)
SELECT B.userid, U.name, B.prodName, U.addr, U.mobile1 + U.mobile2 AS [연락처]
	FROM buyTbl B
		INNER JOIN userTbl U
			ON B.userid = U.userid
	WHERE B.userid = 'JYP';

-- 회원 테이블을 기준으로 아이디가 JYP인 사용자가 구매한 물건의 목록을 알아보기
SELECT U.userid, U.name, B.prodName, U.addr, U.mobile1 + U.mobile2 AS [연락처]
	FROM userTbl U
		INNER JOIN buyTbl B
			ON U.userid = B.userid
	WHERE B.userid = 'JYP';

-- WHERE 조건만 빼서 전체 회원이 구매한 목록을 모두 출력해보고 결과를 보기 쉽게 회원ID 순으로 정렬하기
SELECT U.userid, U.name, B.prodName, U.addr, U.mobile1 + U.mobile2 AS [연락처]
	FROM userTbl U
		INNER JOIN buyTbl B
			ON U.userid = B.userid
	ORDER BY U.userid;

-- 쇼핑몰에서 한 번 이라도 구매한 기록이 있는 우수회원들에게 감사의 안내문을 발송하도록 하자 (DISTINCT문 활용해 회원의 주소록 뽑기)
SELECT DISTINCT U.userid, U.name, U.addr
	FROM userTbl U
		INNER JOIN buyTbl B
			ON U.userid = B.userid
	ORDER BY U.userid;

-- 쇼핑몰에서 한 번 이라도 구매한 기록이 있는 우수회원들에게 감사의 안내문을 발송하도록 하자 (EXISTS문 활용해 회원의 주소록 뽑기)
SELECT U.userid, U.name, U.addr
	FROM userTbl U
	WHERE EXISTS (
		SELECT *
		FROM buyTbl B
		WHERE U.userid = B.userid );
